/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package eu.europa.ec.markt.tlmanager.view.panel;

import eu.europa.ec.markt.tlmanager.view.certificate.DigitalIdentityModel;

/**
 *
 * @author nicolas
 */
public class DigitalIdentityPanel extends javax.swing.JPanel {

    public DigitalIdentityModel digitalIdentityModel;

    /**
     * Creates new form DigitalIdentityPanel
     */
    public DigitalIdentityPanel() {
        digitalIdentityModel = new DigitalIdentityModel();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        digitalIdentityComboBox = new javax.swing.JComboBox();
        digitalIdentityCertificatePanel = new eu.europa.ec.markt.tlmanager.view.panel.DigitalIdentityCertificatePanel();
        digitalIdentitySubjectNamePanel = new eu.europa.ec.markt.tlmanager.view.panel.DigitalIdentitySubjectNamePanel();
        digitalIdentitySKIPanel = new eu.europa.ec.markt.tlmanager.view.panel.DigitalIdentitySKIPanel();

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(DigitalIdentityPanel.class, "DigitalIdentityPanel.jLabel1.text")); // NOI18N

        digitalIdentityComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Certificate", "Subject Name", "Subject Key Identifier" }));
        digitalIdentityComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                digitalIdentityComboBoxItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(digitalIdentitySKIPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(digitalIdentitySubjectNamePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(digitalIdentityCertificatePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 595, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(digitalIdentityComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(digitalIdentityComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(digitalIdentityCertificatePanel, javax.swing.GroupLayout.DEFAULT_SIZE, 524, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(digitalIdentitySubjectNamePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(digitalIdentitySKIPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void digitalIdentityComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_digitalIdentityComboBoxItemStateChanged
        final Object selectedItem = digitalIdentityComboBox.getSelectedItem();
        if (selectedItem != null) {
            if ("Certificate".equals(selectedItem)) {
                showCertificate();
            } else if ("Subject Name".equals(selectedItem)) {
                showSubjectName();
            } else if ("Subject Key Identifier".equals(selectedItem)) {
                showSki();
            }
        } else {
            digitalIdentityModel.setCertificate(null);
            hideAll();
        }
    }//GEN-LAST:event_digitalIdentityComboBoxItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private eu.europa.ec.markt.tlmanager.view.panel.DigitalIdentityCertificatePanel digitalIdentityCertificatePanel;
    private javax.swing.JComboBox digitalIdentityComboBox;
    private eu.europa.ec.markt.tlmanager.view.panel.DigitalIdentitySKIPanel digitalIdentitySKIPanel;
    private eu.europa.ec.markt.tlmanager.view.panel.DigitalIdentitySubjectNamePanel digitalIdentitySubjectNamePanel;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables


    public DigitalIdentityModel getDigitalIdentityModel() {
        if (digitalIdentityModel == null) {
            return new DigitalIdentityModel();
        }

        // sync from view
        final Object selectedItem = digitalIdentityComboBox.getSelectedItem();
        if (selectedItem != null) {
            if ("Certificate".equals(selectedItem)) {
                // already sync
            } else if ("Subject Name".equals(selectedItem)) {
                digitalIdentityModel.setSubjectName(digitalIdentitySubjectNamePanel.retrieveContentInformation());
            } else if ("Subject Key Identifier".equals(selectedItem)) {
                digitalIdentityModel.setSKI(digitalIdentitySKIPanel.retrieveContentInformation());
            }
        } else {
            return new DigitalIdentityModel();
        }
        return digitalIdentityModel;
    }

    public void setDigitalIdentityModel(DigitalIdentityModel digitalIdentityModel) {
        this.digitalIdentityModel = digitalIdentityModel;
    }

    public void updateCurrentValues(DigitalIdentityModel value) {
        setDigitalIdentityModel(value);
        if (digitalIdentityModel != null) {
            if (digitalIdentityModel.getCertificate() != null) {
                digitalIdentityComboBox.setSelectedItem("Certificate");
            } else if (digitalIdentityModel.getSubjectName() != null) {
                digitalIdentityComboBox.setSelectedItem("Subject Name");
            } else if (digitalIdentityModel.getSKI() != null) {
                digitalIdentityComboBox.setSelectedItem("Subject Key Identifier");
            } else {
                digitalIdentityComboBox.setSelectedItem(null);
            }
            digitalIdentityComboBoxItemStateChanged(null);
        }
    }

    private void hideAll() {
        digitalIdentityCertificatePanel.setVisible(false);
        digitalIdentityCertificatePanel.setDigitalIdentityModel(null);

        digitalIdentitySubjectNamePanel.setVisible(false);
        digitalIdentitySubjectNamePanel.setDigitalIdentityModel(null);

        digitalIdentitySKIPanel.setVisible(false);
        digitalIdentitySKIPanel.setDigitalIdentityModel(null);
    }

    private void showSki() {
        digitalIdentityCertificatePanel.setVisible(false);
        digitalIdentityCertificatePanel.setDigitalIdentityModel(null);

        digitalIdentitySubjectNamePanel.setVisible(false);
        digitalIdentitySubjectNamePanel.setDigitalIdentityModel(null);

        digitalIdentitySKIPanel.setVisible(true);
        digitalIdentitySKIPanel.setDigitalIdentityModel(digitalIdentityModel);
    }

    private void showSubjectName() {
        digitalIdentityCertificatePanel.setVisible(false);
        digitalIdentityCertificatePanel.setDigitalIdentityModel(null);

        digitalIdentitySubjectNamePanel.setVisible(true);
        digitalIdentitySubjectNamePanel.setDigitalIdentityModel(digitalIdentityModel);


        digitalIdentitySKIPanel.setVisible(false);
        digitalIdentitySKIPanel.setDigitalIdentityModel(null);
    }

    private void showCertificate() {
        digitalIdentityCertificatePanel.setVisible(true);
        digitalIdentityCertificatePanel.setDigitalIdentityModel(digitalIdentityModel);

        digitalIdentitySubjectNamePanel.setVisible(false);
        digitalIdentitySubjectNamePanel.setDigitalIdentityModel(null);

        digitalIdentitySKIPanel.setVisible(false);
        digitalIdentitySKIPanel.setDigitalIdentityModel(null);
    }

    public void clearOnExit() {
        setDigitalIdentityModel(new DigitalIdentityModel());
        updateCurrentValues(digitalIdentityModel);
    }
}
